// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { SignUpApiV1UsersSignUpPostData, SignUpApiV1UsersSignUpPostResponse, SignInApiV1UsersSignInPostData, SignInApiV1UsersSignInPostResponse, GetMeApiV1UsersMeGetResponse, GetDashboardApiV1DashboardGetData, GetDashboardApiV1DashboardGetResponse, CreateProjectApiV1DashboardCreatePostData, CreateProjectApiV1DashboardCreatePostResponse, ModifyProjectApiV1DashboardModifyPutData, ModifyProjectApiV1DashboardModifyPutResponse } from './types.gen';

export class DefaultService {
    /**
     * Sign Up
     * @param data The data for the request.
     * @param data.requestBody
     * @returns UserDTO Successful Response
     * @throws ApiError
     */
    public static signUpApiV1UsersSignUpPost(data: SignUpApiV1UsersSignUpPostData): CancelablePromise<SignUpApiV1UsersSignUpPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/users/sign_up',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Sign In
     * @param data The data for the request.
     * @param data.formData
     * @returns Token Successful Response
     * @throws ApiError
     */
    public static signInApiV1UsersSignInPost(data: SignInApiV1UsersSignInPostData): CancelablePromise<SignInApiV1UsersSignInPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/users/sign_in',
            formData: data.formData,
            mediaType: 'application/x-www-form-urlencoded',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Me
     * @returns UserDTO Successful Response
     * @throws ApiError
     */
    public static getMeApiV1UsersMeGet(): CancelablePromise<GetMeApiV1UsersMeGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/users/me'
        });
    }
    
    /**
     * Get Dashboard
     * @param data The data for the request.
     * @param data.category
     * @param data.priority
     * @param data.query
     * @param data.dateFilter
     * @param data.offset
     * @param data.limit
     * @returns GetDashboardResponse Successful Response
     * @throws ApiError
     */
    public static getDashboardApiV1DashboardGet(data: GetDashboardApiV1DashboardGetData = {}): CancelablePromise<GetDashboardApiV1DashboardGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/dashboard',
            query: {
                category: data.category,
                priority: data.priority,
                query: data.query,
                date_filter: data.dateFilter,
                offset: data.offset,
                limit: data.limit
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Create Project
     * mock:
     * 1. 일반적인 프로젝트 생성 요청
     * 2. 간단한 요청 (추론이 필요한 경우)
     * 3. 복잡한 프로젝트 세부 정보 포함
     * 4. 정보가 부족한 경우 (기본값 테스트)
     * 5. 실험적인 아이디어
     * 6. 시간 제약이 있는 요청
     *
     * 1. 새로운 마케팅 켐페인을 준비하고 있습니다. 소셜 미디어 플랫폼에서의 도달 향상을 목표로 하여 3개월 동안 진행될 예정입니다.
     * 2. "빠르게 개발할 수 있는 웹 애플리케이션 프로젝트가 필요합니다."
     * 3. "기업 내 팀 간 협업을 개선하기 위한 프로젝트를 계획 중입니다. 이 프로젝트는 2025년 2월 1일에 시작해 2025년 5월 31일까지 완료를 목표로 하며, HR과 IT 팀이 주도합니다. 우선순위는 높음입니다."
     * 4. "프로젝트에 대한 자세한 정보를 아직 정하지 못했습니다."
     * 5. "AI를 활용한 이미지 분석 도구를 만드는 프로젝트를 고려 중입니다. 이 도구는 중소기업이 제품 이미지를 더 효율적으로 관리할 수 있도록 돕는 것을 목표로 합니다."
     * 6. "이벤트 관리 시스템 개발 프로젝트를 빠르게 시작하고 싶습니다. 2주 안에 프로토타입을 완성해야 합니다."
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostCreateProjectResponse Successful Response
     * @throws ApiError
     */
    public static createProjectApiV1DashboardCreatePost(data: CreateProjectApiV1DashboardCreatePostData): CancelablePromise<CreateProjectApiV1DashboardCreatePostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/dashboard/create',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Modify Project
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PutModifyProjectResponse Successful Response
     * @throws ApiError
     */
    public static modifyProjectApiV1DashboardModifyPut(data: ModifyProjectApiV1DashboardModifyPutData): CancelablePromise<ModifyProjectApiV1DashboardModifyPutResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/v1/dashboard/modify',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
}