// This file is auto-generated by @hey-api/openapi-ts

export type Body_sign_in_api_v1_users_sign_in_post = {
    grant_type?: (string | null);
    username: string;
    password: string;
    scope?: string;
    client_id?: (string | null);
    client_secret?: (string | null);
};

export type GetDashboardResponse = {
    request_id?: string;
    projects: Array<Project>;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type PostCreateProjectRequest = {
    query: string;
    thread_id: string;
    parent_id?: (string | null);
    message_id?: (string | null);
};

export type PostCreateProjectResponse = {
    request_id?: string;
    status: boolean;
};

export type Project = {
    u_id?: string;
    title?: (string | null);
    summary?: (string | null);
    priority?: ProjectPriority;
    category?: ProjectCategory;
    start_date: number;
    end_date: number;
    created_at?: number;
    updated_at?: number;
};

export type ProjectCategory = 'short_term' | 'mid_term' | 'long_term' | 'forever';

export type ProjectDateFilter = 'all' | 'week' | 'month';

export type ProjectPriority = 'low' | 'medium' | 'high' | 'critical';

export type PutModifyProjectRequest = {
    u_id: string;
    title: string;
    summary: string;
    priority: ProjectPriority;
    category: ProjectCategory;
    start_date: number;
    end_date: number;
};

export type PutModifyProjectResponse = {
    request_id?: string;
    status: boolean;
};

export type Token = {
    access_token: string;
    token_type?: string;
};

export type UserCreate = {
    name: string;
    password: string;
    user_name?: string;
    user_nickname?: string;
};

export type UserDTO = {
    u_id?: string;
    name?: string;
    user_name?: string;
    user_nickname?: string;
    user_type?: UType;
};

export type UType = 'staff' | 'manager' | 'director' | 'admin';

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type SignUpApiV1UsersSignUpPostData = {
    requestBody: UserCreate;
};

export type SignUpApiV1UsersSignUpPostResponse = (UserDTO);

export type SignInApiV1UsersSignInPostData = {
    formData: Body_sign_in_api_v1_users_sign_in_post;
};

export type SignInApiV1UsersSignInPostResponse = (Token);

export type GetMeApiV1UsersMeGetResponse = (UserDTO);

export type GetDashboardApiV1DashboardGetData = {
    category?: (ProjectCategory | null);
    dateFilter?: (ProjectDateFilter | null);
    limit?: number;
    offset?: number;
    priority?: (ProjectPriority | null);
    query?: (string | null);
};

export type GetDashboardApiV1DashboardGetResponse = (GetDashboardResponse);

export type CreateProjectApiV1DashboardCreatePostData = {
    requestBody: PostCreateProjectRequest;
};

export type CreateProjectApiV1DashboardCreatePostResponse = (PostCreateProjectResponse);

export type ModifyProjectApiV1DashboardModifyPutData = {
    requestBody: PutModifyProjectRequest;
};

export type ModifyProjectApiV1DashboardModifyPutResponse = (PutModifyProjectResponse);