name: Build and deploy Python app to Azure Web App - swnl-crm

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1) Check out the repo
      - uses: actions/checkout@v4

      # 2) Set up a specific Python version
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.9'

      # 3) Install Poetry (we'll use pip to install the Poetry CLI)
      - name: Install/Upgrade Poetry (and plugin)
        run: |
          python -m pip install --upgrade pip
          # Install poetry (2.x)
          pip install --upgrade poetry
          
          # For Poetry 2.x, install the export plugin:
          pip install poetry-plugin-export
          
          # Verify versions and that commands are recognized:
          poetry --version
          poetry self show plugins

      # 4) Install dependencies using Poetry
      #    This will create a .venv inside your repo (or system-wide venv, depending on Poetry config).
      - name: Install dependencies with Poetry
        run: |
          poetry install --no-interaction --no-ansi
          # If you want to install dev dependencies as well:
          # poetry install --with dev
      # Optional: run tests
      # - name: Run tests
      #   run: poetry run pytest  # or whatever command your tests require

      # 5) (Optional) Export a requirements.txt if needed for Azure runtime
      #    Some Azure scenarios expect a requirements.txt at startup.
      #    If your Azure setup does not require it, you can skip this step.
      - name: Export Poetry dependencies to requirements.txt
        run: |
          poetry export -f requirements.txt --output requirements.txt --without-hashes

      # 6) Zip your source code (and any files Azure needs to run/install)
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r \
          -x "*.venv/*"

      # 7) Upload artifact for the next job
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # required for requesting the JWT for Azure login

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_DBE53421FF744AA8B7015DBB941D2202 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_5088E999E17243C28DB5907335EF61FA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_9B0BEEF7AA2D40E882995D334DFE5FC4 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'swnl-crm'
          slot-name: 'Production'
